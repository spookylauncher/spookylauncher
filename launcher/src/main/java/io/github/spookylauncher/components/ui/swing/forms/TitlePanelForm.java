package io.github.spookylauncher.components.ui.swing.forms;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.util.Locale;

public class TitlePanelForm {
    public JPanel panel1;
    public JButton versions;
    public JButton play;
    public JLabel preview;
    public JLabel versionName;
    public JLabel credit;
    public JLabel releaseDate;
    public JButton openArticle;
    public JTextArea description;
    public JScrollPane scrollPane;
    public JButton settings;

    private void createUIComponents() {
        versions = new JButton();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(17, 12, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setBackground(new Color(-13487566));
        panel1.setForeground(new Color(-13487566));
        panel1.setBorder(BorderFactory.createTitledBorder(null, "", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(0, 3, 14, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        play = new JButton();
        play.setText("Play");
        panel1.add(play, new GridConstraints(15, 4, 2, 8, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        preview = new JLabel();
        preview.setText("");
        panel1.add(preview, new GridConstraints(0, 4, 15, 8, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        versions.setText("Versions");
        panel1.add(versions, new GridConstraints(15, 1, 2, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        openArticle = new JButton();
        openArticle.setText("Open Article");
        panel1.add(openArticle, new GridConstraints(14, 0, 1, 4, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        scrollPane = new JScrollPane();
        scrollPane.setBackground(new Color(-13487566));
        scrollPane.setEnabled(true);
        scrollPane.setForeground(new Color(-1));
        panel1.add(scrollPane, new GridConstraints(2, 0, 12, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        description = new JTextArea();
        description.setBackground(new Color(-13487566));
        description.setEditable(false);
        Font descriptionFont = this.$$$getFont$$$("Consolas", -1, 14, description.getFont());
        if (descriptionFont != null) description.setFont(descriptionFont);
        description.setForeground(new Color(-1));
        description.setLineWrap(true);
        description.setRows(0);
        description.setText("");
        scrollPane.setViewportView(description);
        versionName = new JLabel();
        Font versionNameFont = this.$$$getFont$$$(null, -1, 26, versionName.getFont());
        if (versionNameFont != null) versionName.setFont(versionNameFont);
        versionName.setForeground(new Color(-1));
        versionName.setText("=)");
        panel1.add(versionName, new GridConstraints(0, 0, 1, 3, GridConstraints.ANCHOR_NORTHWEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        settings = new JButton();
        settings.setText("Settings");
        panel1.add(settings, new GridConstraints(15, 0, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        credit = new JLabel();
        Font creditFont = this.$$$getFont$$$(null, -1, 14, credit.getFont());
        if (creditFont != null) credit.setFont(creditFont);
        credit.setForeground(new Color(-1));
        credit.setHorizontalTextPosition(2);
        credit.setText("");
        panel1.add(credit, new GridConstraints(0, 11, 1, 1, GridConstraints.ANCHOR_NORTHEAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        releaseDate = new JLabel();
        Font releaseDateFont = this.$$$getFont$$$("Segoe UI Semibold", Font.PLAIN, 16, releaseDate.getFont());
        if (releaseDateFont != null) releaseDate.setFont(releaseDateFont);
        releaseDate.setForeground(new Color(-1));
        releaseDate.setText("");
        panel1.add(releaseDate, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
